---
- include: raspi-facts.yml
- include: linux-facts.yml

- name: Get MAC address
  debug:
    msg: "{{ hostvars[inventory_hostname].ansible_default_ipv4.macaddress }}"
  tags:
    - raspi
    - sw

- name: store MAC address
  set_fact:
    my_macaddr: "{{ hostvars[inventory_hostname].ansible_default_ipv4.macaddress }}"
  tags:
    - raspi
    - sw

- name: store system configuration
  set_fact:
    myconfig: "{{ macaddrs[my_macaddr] }}"
  tags:
    - raspi
    - sw

- name: set hostname
  become: yes
  shell: "raspi-config nonint do_hostname {{ myconfig.hostname }}"
  when: raspi_hostname != myconfig.hostname

- name: update /etc/hosts with new hostname
  become: yes
  lineinfile:
    dest=/etc/hosts
    regexp="^{{ ansible_default_ipv4.address }}"
    line="{{ ansible_default_ipv4.address }}{{'\t'}}{{ myconfig.hostname }}.{{ myconfig.domain }}{{'\t'}}{{ myconfig.hostname }}"
    state=present

- name: get rid of default 127.0.1.1 binding
  become: yes
  lineinfile:
    dest=/etc/hosts
    regexp="^127.0.1.1"
    state=absent

# Set timezone
- name: set timezone
  become: yes
  command: "timedatectl set-timezone {{ myconfig.timezone }}"
  when: linux_tz != myconfig.timezone


- name: disable swap
  become: yes
  shell: dphys-swapfile swapoff && dphys-swapfile uninstall && update-rc.d dphys-swapfile remove && systemctl disable dphys-swapfile
  register: disable_swap

- name: disable swappiness
  become: yes
  sysctl:
    name: vm.swappiness
    value: '0'
    sysctl_set: yes
    state: present
    reload: yes

- name: update apt packages
  become: true
  apt:
    update_cache: yes
    cache_valid_time: 86400

# Install required software
- name: install basic software environment
  become: yes
  apt:
    name="{{ packages }}"
    state=present
    update_cache=no
  vars:
    packages:
      - git
      - python-apt
      - python-pip
      - wget
      - curl
  tags:
    - sw
